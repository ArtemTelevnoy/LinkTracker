app:
  github:
    token: ${GITHUB_TOKEN}
    github-base-url: ${GITHUB_BASE_URL:https://api.github.com}
  stackoverflow:
    key: ${SO_TOKEN_KEY}
    access-token: ${SO_ACCESS_TOKEN}
    stack-base-url: ${STACK_BASE_URL:https://api.stackexchange.com}
  bot-base-url: ${BOT_BASE_URL:http://localhost:8080}
  access-type: ORM
  message-transport: ${MESSAGE_TRANSPORT:HTTP}
  thread-count: 4
  scheduler-delay: 7500
  metrics-updater-delay: 2500
  batch-size: 1000
  updates-topic-name: ${UPDATES_TOPIC_NAME:updates}
  dlq-topic-name: ${DLQ_TOPIC_NAME:dlq}
  timeout-duration: 3000
  retry-codes: [429, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511]
  endpointsRateLimiter:
    timeout-duration: 0s
    limit-for-period: 3
    limit-refresh-period: 5s

spring:
  application:
    name: scrapper
  datasource:
    url: jdbc:postgresql://localhost:5431/scrapper
    username: postgres
    password: postgres
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    show-sql: false
  kafka:
    bootstrap-servers: localhost:19092,localhost:29092
    producer.properties:
      acks: 1
      batch.size: 1024
      linger.ms: 10000
      schema.registry.url: http://localhost:8083
  data:
    redis:
      host: localhost
      port: 6378

server:
  port: 8081

management:
  server:
    port: 8071
  endpoints:
    web:
      base-path: /
      path-mapping:
        prometheus: /metrics
      exposure:
        include: health, prometheus
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true

resilience4j.retry:
  instances:
    webClientRetry:
      max-attempts: 3
      wait-duration: 500
      retry-exceptions:
        - backend.academy.dto.api.SupportedErrorCodeException

resilience4j.circuitbreaker:
  instances:
    webClientCircuitBreaker:
      sliding-window-type: COUNT_BASED
      sliding-window-size: 10
      minimum-number-of-calls: 10
      failure-rate-threshold: 100
      wait-duration-in-openState: 1s
      permitted-number-of-calls-in-half-open-state: 1

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui
